# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cxx11 1.1
PortGroup           github 1.0
PortGroup           xcode 1.0
PortGroup           xcodeversion 1.0

github.setup        KhronosGroup MoltenVK 1.0.33 v
set submodules {
                    USCiLab cereal 51cbda5f30e56c801c07fe3d3aba5d7fb9e6cca4 cereal
                    KhronosGroup Vulkan-Headers 8e2c4cd554b644592a6d904f2c8000ebbd4aa77f Vulkan-Headers
                    KhronosGroup SPIRV-Cross d9ed3dcc7a7e62e5f95fd8f24e3d35e7e402ae92 SPIRV-Cross
                    KhronosGroup glslang 5432f0dd8f331f15182681664d7486681e8514e6 glslang
                    KhronosGroup SPIRV-Tools 5994ae2a045015004cce24802dc47c33736486ea glslang/External/spirv-tools
                    KhronosGroup SPIRV-Headers 79b6681aadcb53c27d1052e5f8a0e82a981dbf2f glslang/External/spirv-tools/external/spirv-headers
                    KhronosGroup Vulkan-Tools d43b22f0859f42c5fd71a530278ffa504ce95b7f Vulkan-Tools
                    LunarG VulkanSamples 9ce6ece9d86b9501c1a8a4adbd4e0e60a5ae8456 VulkanSamples
}
checksums           ${distfiles} \
                    rmd160  ef0b9fb5fccb545d20e122d73b7af99f513864d4 \
                    sha256  76573e97c05657416ad2fb5d290940034c28c425556d40c01007c08a0959958d \
                    size    1182656 \
                    cereal-51cbda5f30e56c801c07fe3d3aba5d7fb9e6cca4.tar.gz \
                    rmd160  33a8f9bd682f36387d3d589410113c6dd1e18bc4 \
                    sha256  26361b539fe50eee308b564faa2742166d2922a7ab0bd4870ac55708581228c8 \
                    size    336138 \
                    Vulkan-Headers-8e2c4cd554b644592a6d904f2c8000ebbd4aa77f.tar.gz \
                    rmd160  af8df87c5c3a67a9b854a04535b579aaadd6861f \
                    sha256  9c2b2fd219b24838e586fafce5bad9cdcf5eda10b00d838656d20c31ac25cc62 \
                    size    556510 \
                    SPIRV-Cross-d9ed3dcc7a7e62e5f95fd8f24e3d35e7e402ae92.tar.gz \
                    rmd160  f011f5eef7ce9aa235f37bb008e22b9a3076e555 \
                    sha256  423165b6f684acac69dace27b533f8862c98e4e8d1e4ac980700cb21eb7dde5f \
                    size    655839 \
                    glslang-5432f0dd8f331f15182681664d7486681e8514e6.tar.gz \
                    rmd160  7340974330b698872bb3fa43721d142b04d5d9bf \
                    sha256  2c482fa3bd39df7791251fe52f7554745a35b77d446b76de7ce638ef74530dda \
                    size    2504908 \
                    SPIRV-Tools-5994ae2a045015004cce24802dc47c33736486ea.tar.gz \
                    rmd160  371842a8b8425f965f0acde5982087b2b4e8bbad \
                    sha256  5ed96848aaf3089f074823d93ae6fcc1b010764356de50f9960547a733b484f2 \
                    size    1537554 \
                    SPIRV-Headers-79b6681aadcb53c27d1052e5f8a0e82a981dbf2f.tar.gz \
                    rmd160  cf769e51da66d52aa6132ce80d28206ed4256980 \
                    sha256  de2d156572153675729350745b886a8081284a7dc56fbd66c832e764183de47b \
                    size    332580 \
                    Vulkan-Tools-d43b22f0859f42c5fd71a530278ffa504ce95b7f.tar.gz \
                    rmd160  3a69fa0dac466d81a1fc30fa28dcc8c73c878aeb \
                    sha256  19271b9e7f58da72dd465ef7e41cac840980cbb965fd0780dbcad34a35728c62 \
                    size    351676 \
                    VulkanSamples-9ce6ece9d86b9501c1a8a4adbd4e0e60a5ae8456.tar.gz \
                    rmd160  3dd157211163eb62d763c06f3ca737a2ab5015af \
                    sha256  57a8846c7e8890304a8cf12633c4735b903ef11d65d9a4aa8694e3ce120fd1ac \
                    size    3830381

categories          graphics
maintainers         {ryandesign @ryandesign} openmaintainer
license             Apache-2

# MoltenVK would build for i386, but it uses Metal which only works on x86_64.
supported_archs     x86_64

description         an implementation of Vulkan for Metal

long_description    ${name} is an implementation of the high-performance, \
                    industry-standard Vulkan graphics and compute API, that \
                    runs on Apple's Metal graphics framework.

master_sites        ${master_sites}:${name}
distfiles           ${distfiles}:${name}

foreach {sub_author sub_project sub_commit sub_dest} ${submodules} {
    master_sites-append https://github.com/${sub_author}/${sub_project}/archive/${sub_commit}.tar.gz?dummy=:${sub_project}
    distfiles-append    ${sub_project}-${sub_commit}.tar.gz:${sub_project}
}

post-extract {
    ln -s {*}[glob -directory ${workpath} -tails ${github.author}-${github.project}-*] ${worksrcpath}
    set bad_submodule no
    foreach {sub_author sub_project sub_commit sub_dest} ${submodules} {
        set commit_file ${worksrcpath}/ExternalRevisions/${sub_project}_repo_revision
        if [file exists ${commit_file}] {
            set commit_re {^(\S+)}
        } else {
            set commit_file ${worksrcpath}/External/glslang/known_good.json
            set commit_re "\"subrepo\" : \"${sub_author}/${sub_project}\".*?\"commit\" : \"(\[^\"\]+)\""
        }
        set fp [open ${commit_file} r]
        set commit_file_data [read ${fp}]
        close ${fp}
        regexp ${commit_re} ${commit_file_data} -> commit
        if {${commit} ne ${sub_commit}} {
            set bad_submodule yes
            set submodules [string map "${sub_commit} ${commit}" ${submodules}]
        }
        file mkdir [file dirname ${worksrcpath}/External/${sub_dest}]
        ln -s {*}[glob ${workpath}/${sub_project}-*] ${worksrcpath}/External/${sub_dest}
    }
    if ${bad_submodule} {
        ui_error "The submodules should be:\n${submodules}"
        return -code error "incorrect submodule commit"
    }
}

depends_build-append \
                    path:bin/cmake:cmake

build.pre_args      -derivedDataPath ./DerivedData

xcode.configuration Release
xcode.scheme        "MoltenVK Package (macOS only)"
xcode.project       "MoltenVKPackaging.xcodeproj"

pre-build {
    system -W ${worksrcpath} ./fetchDependencies
}

destroot {
    set output_dir ${worksrcpath}/build/${xcode.configuration}
    copy ${output_dir}/MoltenVKShaderConverter ${destroot}${prefix}/bin
    copy ${output_dir}/libMoltenVK.dylib ${destroot}${prefix}/lib
    copy {*}[glob ${output_dir}/*.framework] ${destroot}${frameworks_dir}
}

minimum_xcodeversions   {16 9}

platform darwin {
    if {${os.major} < 16} {
        archive_sites
        distfiles
        depends_build
        pre-fetch {
            ui_error "${subport} @${version} requires macOS Sierra or later"
            return -code error "incompatible OS X version"
        }
    }
}
